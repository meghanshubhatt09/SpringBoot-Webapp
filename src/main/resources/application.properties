logging.level.org.springframework=debug



# DataSource settings: set here your own configurations for the database
# connection. In this example we have "RestProject" as database name and
# "root" as username and password (blank; dont keep space)
# DB credential

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
spring.datasource.username=user
spring.datasource.password=user

spring.jpa.database=MYSQL

# here we say to spring, pls make DB tables for me if i create classes
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# This is specific to DB for us its mysql
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Sometime, spring throws an exception if u ask for some record from
# DB and it cannot find it. so we are saying dont throw exception
spring.jackson.serialization.fail-on-empty-beans=false

# we will be saving all log in one app.log file
logging.level.com.webservices.cloudwebapp.webapp*=INFO
logging.file.name= csye6225.log
publish.metrics = true
metrics.server.hostname=localhost
metrics.server.port=8125

#tomcat by default works on 8080 port
server.port=8080

#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp

#Spring will try to create the session tables using the script
spring.session.jdbc.initialize-schema=always
#cloud.aws.profile=dev
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false
#cloud.aws.credentials.access-key=
#cloud.aws.credentials.secret-key=
app.awsServices.bucketName=my-demo-s3-test

logging.level.com.amazonaws.util.EC2MetadataUtils=error
logging.level.com.amazonaws.internal.InstanceMetadataServiceResourceFetcher=error



#scp -i /Users/meghanshubhatt/.ssh/aws /Users/meghanshubhatt/Desktop/Assignment 5 2/webapp/target/webapp-0.0.1-SNAPSHOT.war ubuntu@ec2-3-80-89-146.compute-1.amazonaws.com:~